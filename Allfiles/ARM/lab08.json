{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.63.48766",
      "templateHash": "5764874918873201585"
    }
  },
  "parameters": {
    "yourID": {
      "type": "string",
      "metadata": {
        "description": "Your unique ID - i.e. dm041221"
      }
    },
    "courseID": {
      "type": "string",
      "metadata": {
        "description": "Course ID - i.e. az220"
      }
    }
  },
  "functions": [],
  "variables": {
    "location": "[resourceGroup().location]",
    "iotHubName": "[format('iot-{0}-training-{1}', parameters('courseID'), parameters('yourID'))]",
    "identityName": "[format('{0}ID2', parameters('courseID'))]",
    "contributorRoleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c', subscription().subscriptionId)]",
    "deviceID": "sensor-v-3000",
    "storageAccountName": "[format('vibrationstore{0}', parameters('yourID'))]",
    "storageContainerName": "vibrationcontainer",
    "jobName": "vibrationJob",
    "jobInputName": "vibrationInput",
    "jobOutputName": "vibrationOutput",
    "jobTransformationName": "VibrationJobTransformation",
    "scriptIdentity": {
      "type": "UserAssigned",
      "userAssignedIdentities": {
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": {}
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('identityName')]",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[guid(subscription().subscriptionId, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')))]",
      "properties": {
        "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2018-11-30', 'Full').properties.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-02-01",
      "name": "[variables('storageAccountName')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "location": "[variables('location')]",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', variables('storageContainerName'))]",
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "apiVersion": "2017-04-01-preview",
      "name": "[variables('jobName')]",
      "location": "[variables('location')]",
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "eventsOutOfOrderPolicy": "Adjust",
        "outputErrorPolicy": "Stop",
        "eventsOutOfOrderMaxDelayInSeconds": 10,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "compatibilityLevel": "1.1",
        "contentStoragePolicy": "SystemAccount",
        "jobType": "Cloud"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deployHub')]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageAccountName'), 'default', variables('storageContainerName'))]"
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/inputs",
      "apiVersion": "2017-04-01-preview",
      "name": "[format('{0}/{1}', variables('jobName'), variables('jobInputName'))]",
      "properties": {
        "type": "Stream",
        "datasource": {
          "type": "Microsoft.Devices/IotHubs",
          "properties": {
            "iotHubNamespace": "[variables('iotHubName')]",
            "sharedAccessPolicyKey": "[reference(resourceId('Microsoft.Resources/deployments', 'deployHub'), '2019-10-01').outputs.iothubownerKey.value]",
            "sharedAccessPolicyName": "iothubowner",
            "endpoint": "messages/events",
            "consumerGroupName": "$Default"
          }
        },
        "compression": {
          "type": "None"
        },
        "serialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deployHub')]",
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('jobName'))]"
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2017-04-01-preview",
      "name": "[format('{0}/{1}', variables('jobName'), variables('jobOutputName'))]",
      "properties": {
        "datasource": {
          "type": "Microsoft.Storage/Blob",
          "properties": {
            "storageAccounts": [
              {
                "accountKey": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-02-01').keys[0].value]",
                "accountName": "[variables('storageAccountName')]"
              }
            ],
            "container": "[variables('storageContainerName')]",
            "pathPattern": "output/",
            "dateFormat": "yyyy/MM/dd",
            "timeFormat": "HH"
          }
        },
        "serialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8",
            "format": "LineSeparated"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('jobName'))]"
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/transformations",
      "apiVersion": "2016-03-01",
      "name": "[format('{0}/{1}', variables('jobName'), variables('jobTransformationName'))]",
      "properties": {
        "query": "SELECT * INTO vibrationOutput FROM vibrationInput",
        "streamingUnits": 1
      },
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('jobName'))]",
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs/inputs', variables('jobName'), variables('jobInputName'))]",
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs/outputs', variables('jobName'), variables('jobOutputName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "deployHub",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "iotHubName": {
            "value": "[variables('iotHubName')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "16045339592086363692"
            }
          },
          "parameters": {
            "iotHubName": {
              "type": "string",
              "metadata": {
                "description": "The IoT Hub name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specify the location of the resources."
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "S1",
              "metadata": {
                "description": "The SKU to use for the IoT Hub."
              }
            },
            "skuUnits": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "The number of IoT Hub units."
              }
            }
          },
          "functions": [],
          "variables": {
            "iotHubKeyName": "iothubowner"
          },
          "resources": [
            {
              "type": "Microsoft.Devices/IotHubs",
              "apiVersion": "2020-08-31",
              "name": "[parameters('iotHubName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuUnits')]"
              }
            }
          ],
          "outputs": {
            "connectionString": {
              "type": "string",
              "value": "[format('HostName={0};SharedAccessKeyName={1};SharedAccessKey={2}', reference(resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName'))).hostName, variables('iotHubKeyName'), listkeys(resourceId('Microsoft.Devices/Iothubs/Iothubkeys', parameters('iotHubName'), variables('iotHubKeyName')), '2020-03-01').primaryKey)]"
            },
            "eventHubEndPoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName'))).eventHubEndpoints.events.endpoint]"
            },
            "eventHubPath": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName'))).eventHubEndpoints.events.path]"
            },
            "iothubownerKey": {
              "type": "string",
              "value": "[listkeys(resourceId('Microsoft.Devices/Iothubs/Iothubkeys', parameters('iotHubName'), 'iothubowner'), '2020-03-01').primarykey]"
            },
            "serviceKey": {
              "type": "string",
              "value": "[listkeys(resourceId('Microsoft.Devices/Iothubs/Iothubkeys', parameters('iotHubName'), 'service'), '2020-03-01').primarykey]"
            },
            "deviceKey": {
              "type": "string",
              "value": "[listkeys(resourceId('Microsoft.Devices/Iothubs/Iothubkeys', parameters('iotHubName'), 'device'), '2020-03-01').primarykey]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "createDevice",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "iotHubName": {
            "value": "[variables('iotHubName')]"
          },
          "deviceID": {
            "value": "[variables('deviceID')]"
          },
          "scriptIdentity": {
            "value": "[variables('scriptIdentity')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "11467684887427896630"
            }
          },
          "parameters": {
            "iotHubName": {
              "type": "string",
              "metadata": {
                "description": "The IoT Hub name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specify the location of the resources."
              }
            },
            "groupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Specify the Group Name."
              }
            },
            "scriptIdentity": {
              "type": "object",
              "metadata": {
                "description": "The SKU to use for the IoT Hub."
              }
            },
            "deviceID": {
              "type": "string",
              "metadata": {
                "description": "The Device ID"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "createDevice",
              "kind": "AzurePowerShell",
              "location": "[parameters('location')]",
              "identity": "[parameters('scriptIdentity')]",
              "properties": {
                "azPowerShellVersion": "6.0",
                "retentionInterval": "P1D",
                "timeout": "PT10M",
                "cleanupPreference": "Always",
                "arguments": "[format('{0} {1} {2}', parameters('groupName'), parameters('iotHubName'), parameters('deviceID'))]",
                "scriptContent": "param(\n    [Parameter(Mandatory=$true)]\n    [string]\n    $resourceGroup,\n\n    [Parameter(Mandatory = $true)]\n    [string]\n    $iotHub,\n\n    [Parameter(Mandatory = $true)]\n    [string]\n    $deviceName\n)\n\n$output = \"Adding $($deviceName) to $($iotHub)\"\nWrite-Output $output\n\nGet-AzContext\n\nAdd-AzIotHubDevice -ResourceGroupName $resourceGroup -IotHubName $iotHub -DeviceId $deviceName -AuthMethod \"shared_private_key\"\n\n$deviceDetails = (Get-AzIotHubDeviceConnectionString -ResourceGroupName $resourceGroup -IotHubName $iotHub -DeviceId $deviceName)\n\n$DeploymentScriptOutputs = @{}\n$DeploymentScriptOutputs['text'] = $output\n$DeploymentScriptOutputs['date'] = (get-date -Format FileDate).toString()\n$DeploymentScriptOutputs['deviceId'] = $deviceDetails.DeviceId\n$DeploymentScriptOutputs['connectionString'] = $deviceDetails.ConnectionString\n# primary key\n$DeploymentScriptOutputs['primaryKey'] = ($deviceDetails.ConnectionString -replace ';', \"`r`n\" | ConvertFrom-StringData).SharedAccessKey\n\n# secondary key\n$deviceDetails = (Get-AzIotHubDeviceConnectionString -ResourceGroupName $resourceGroup -IotHubName -KeyType secondary $iotHub -DeviceId $deviceName)\n$DeploymentScriptOutputs[secondaryKey'] = ($deviceDetails.ConnectionString -replace ';', \"`r`n\" | ConvertFrom-StringData).SharedAccessKey\n"
              }
            }
          ],
          "outputs": {
            "deviceConnectionString": {
              "type": "string",
              "value": "[reference('createDevice').outputs.connectionString]"
            },
            "primaryKey": {
              "type": "string",
              "value": "[reference('createDevice').outputs.primaryKey]"
            },
            "secondaryKey": {
              "type": "string",
              "value": "[reference('createDevice').outputs.secondaryKey]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deployHub')]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]",
        "[resourceId('Microsoft.Authorization/roleAssignments', guid(subscription().subscriptionId, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))))]"
      ]
    }
  ],
  "outputs": {
    "connectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deployHub'), '2019-10-01').outputs.connectionString.value]"
    },
    "deviceConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'createDevice'), '2019-10-01').outputs.deviceConnectionString.value]"
    },
    "devicePrimaryKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'createDevice'), '2019-10-01').outputs.primaryKey.value]"
    },
    "eventHubEndPoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deployHub'), '2019-10-01').outputs.eventHubEndPoint.value]"
    },
    "eventHubPath": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deployHub'), '2019-10-01').outputs.eventHubPath.value]"
    },
    "serviceKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deployHub'), '2019-10-01').outputs.serviceKey.value]"
    }
  }
}